apply plugin: 'com.android.application'

def getLocalProperties() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties
}

def getLocalProperty(key) {
    Properties properties = getLocalProperties()
    return properties.getProperty(key)
}

def getTwitterKey() {
    return getLocalProperty("twitter.key")
}

def getTwitterSecret() {
    return getLocalProperty("twitter.secret")
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.ques.copytodownload"
        minSdkVersion 24
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "TWITTER_KEY", "\"" + getTwitterKey() + "\""
        buildConfigField "String", "TWITTER_SECRET", "\"" + getTwitterSecret() + "\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    compile 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    compile 'com.twitter.sdk.android:twitter-core:3.3.0'
}
